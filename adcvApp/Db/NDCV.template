#
# EPICS database template file for ADCompVision. 
# This will contatin records used by the plugin's various
# functions.
# 
# Author: Jakub Wlodek June 2018
#
# Last modified: November 18, 2018


# include the base driver template file
include "NDPluginBase.template"


#########################################################################
# Function selection PVs. Multiple functions selected will chain them.  #
#########################################################################

############################ First Comp Vision Function ####################################

record(mbbo, "$(P)$(R)CompVisionFunction1")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NDCV_FUNCTION1")
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Gaussian Blur")
    field(ONVL, "1")
    field(TWST, "Threshold")
    field(TWVL, "2")
    field(THST, "Laplacian")
    field(THVL, "3")
    field("FRST", "Canny Edge Detection")
    field("FRVL", "4")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)CompVisionFunction1_RBV")
{
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NDCV_FUNCTION1")
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Gaussian Blur")
    field(ONVL, "1")
    field(TWST, "Threshold")
    field(TWVL, "2")
    field(THST, "Laplacian")
    field(THVL, "3")
    field("FRST", "Canny Edge Detection")
    field("FRVL", "4")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

############################ Second Comp Vision Function ####################################

record(mbbo, "$(P)$(R)CompVisionFunction2")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NDCV_FUNCTION2")
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Centroid Identification")
    field(ONVL, "1")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)CompVisionFunction2_RBV")
{
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NDCV_FUNCTION2")
    field(ZRST, "None")
    field(ZRVL, "0")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

############################ Third Comp Vision Function ####################################

record(mbbo, "$(P)$(R)CompVisionFunction3")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NDCV_FUNCTION3")
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Canny Edge Detection")
    field(ONVL, "1")
    field(TWST, "Threshold")
    field(TWVL, "2")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)CompVisionFunction3_RBV")
{
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NDCV_FUNCTION3")
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Canny Edge Detection")
    field(ONVL, "1")
    field(TWST, "Threshold")
    field(TWVL, "2")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

#############################################################################
# Because OpenCV has so many functions with so many different flags and     #
# parameters, the PV values for this plugin will vary in effect for each    #
# OpenCV function. Further information can be found in the README.md file   #
#############################################################################

#############################################################################
# Input PVs (10)                                                       #
#############################################################################

record(ao, "$(P)$(R)Input1")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN1")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input1_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN1")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input2")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN2")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input2_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN2")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input3")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN3")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input3_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN3")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input4")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN4")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input4_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN4")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input5")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN5")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input5_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN5")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input6")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN6")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input6_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN6")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input7")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN7")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input7_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN7")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input8")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN8")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input8_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN8")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input9")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN9")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input9_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN9")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Input10")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN10")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Input10_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN10")
    field(SCAN, "I/O Intr")
}


#######################################################################
# Output PVs (10)                                                #
#######################################################################

record(ao, "$(P)$(R)Output1")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT1")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output1_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT1")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output2")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT2")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output2_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT2")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output3")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT3")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output3_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT3")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output4")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT4")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output4_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT4")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output5")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT5")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output5_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT5")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output6")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT6")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output6_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT6")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output7")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT7")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output7_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT7")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output8")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT8")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output8_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT8")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output9")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT9")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output9_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT9")
    field(SCAN, "I/O Intr")
}

#------------------------------------------------------------------------------------

record(ao, "$(P)$(R)Output10")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT10")
    field(VAL, "0.0")
}

record(ai, "$(P)$(R)Output10_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT10")
    field(SCAN, "I/O Intr")
}


#################################################################
# Other records                                                 #
#################################################################

#------------------Description of values in output PVs--------------------------

record(waveform, "$(P)$(R)InputDescription"){
    field(PINI, "YES")
	field(DTYP, "asynOctetRead")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN_DESCRIPTION")
    field(VAL, "CV Inputs")
}

record(waveform, "$(P)$(R)InputDescription_RBV"){
	field(DTYP, "asynOctetRead")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_IN_DESCRIPTION")
    field(VAL, "CV Inputs")
	field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)OutputDescription"){
    field(PINI, "YES")
	field(DTYP, "asynOctetRead")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT_DESCRIPTION")
    field(VAL, "CV Outputs")
}

record(waveform, "$(P)$(R)OutputDescription_RBV"){
	field(DTYP, "asynOctetRead")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDCV_OUT_DESCRIPTION")
    field(VAL, "CV Outputs")
	field(SCAN, "I/O Intr")
}

